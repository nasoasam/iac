name: Terraform Apply
on:
  push:
    branches:
      - main
      - prod
  workflow_dispatch:
  
jobs:
  Setup:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set.outputs.env }};
    steps:
      - id: get_env
        shell: bash
        run: |
            case ${{ github.ref_name }} in
              prod )
                echo 'env=prod' >> $GITHUB_OUTPUT
                echo 'upper_case_env=PROD' >> $GITHUB_OUTPUT
                ;;
              * )
                echo 'env=dev' >> $GITHUB_OUTPUT
                echo 'upper_case_env=DEV' >> $GITHUB_OUTPUT
                ;;
            esac

  terraform_apply:
    runs-on: ubuntu-latest
    needs: Setup
    environment:
      name: ${{ needs.Setup.outputs.env }}
      url: https://google.com
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: uap-northeast-1

      - id: init
        run: terraform init -backend-config=${{ needs.Setup.outputs.env }}.tfbackend

      - id: apply
        run: terraform apply -no-color -auto-approve -var-file=${{ needs.Setup.outputs.env }}.tfvars
        continue-on-error: true
